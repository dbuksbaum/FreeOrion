
#ifndef _FREEORION_ClientEmpireManager_h_
#include "ClientEmpireManager.h"
#endif

#include <string>


ClientEmpireManager::ClientEmpireManager()
{
    // no worries yet
}
   
/**
*  Handles an update for this client.  
*  The XMLElement should be an XMLDiff for the empires in this client
*  manager (that is, produced by ServerEmpireManager::CreateClientEmpireUpdate()
*
*/
bool ClientEmpireManager::HandleEmpireElementUpdate( GG::XMLElement empireElement)
{
    // FINISH ME!
    return true;
}

/**
*  Takes an XMLElement representing a list of sitrep events
*  The list will be decoded, one entry at a time, and the entries
*  will be added to the sitrep of the empire to whom they belong.
* 
*  The XMLElement passed into this method should be identical to
*  that generated by ServerEmpireManager::CreateClientSitrepUpdate()
*
*/
bool ClientEmpireManager::HandleSitRepElementUpdate( GG::XMLElement sitRepElement)
{
    std::string sID = (sitRepElement.Attribute("EmpireID"));
    
    if( sID == "" )
    {
        return false;
    }
    
    int iID = atoi(sID.c_str());
    
    Empire* emp = Lookup(iID);
    if(emp == NULL)
    {
        return false;
    }
    
    emp->ClearSitRep();
 /*   for(unsigned int i = 0; i<sitRepElement.NumChildren(); i++)
    {
       SitRepEntry* entry = new SitRepEntry(sitRepElement.Child(i));        
       emp->AddSitRepEntry(entry);
    }
   */     
    return true;
}
