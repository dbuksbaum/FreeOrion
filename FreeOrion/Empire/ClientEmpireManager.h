// -*- C++ -*-
#ifndef _ClientEmpireManager_h_
#define _ClientEmpireManager_h_

#ifndef _EmpireManager_h_
#include "EmpireManager.h"
#endif

/** ClientEmpire is the client version of the EmpireManager.  It
    supports methods to handle the turn updates which are generated by
    ServerEmpire */
class ClientEmpireManager : public EmpireManager
{
public:
    /** \name Constructors */ //@{
    ClientEmpireManager(); ///< Creates an empty Client empire manager.
    //@}
   
    /** \name Mutators */ //@{
    /** Handles an update for this client.  The XMLElement should be
       one produced by ServerEmpire::CreateClientEmpireUpdate()

       The client manager will be updated to reflect the empire state
       specified by ServerEmpire.  Empires will be created, removed,
       or modified until the empires in this manager match those in
       the server manager.

       DANGER: This method will cause all empires in the manager to be
       deallocated and recreated.  Pointers to Empires will not be
       valid after an update is handled.
    */
    bool HandleEmpireElementUpdate(const XMLElement& empireElement);


    /// Encodes current empire knowledge to XML for use in determining update diffs
    XMLElement EncodeEmpires();
    //@}
};


#endif // _ClientEmpireManager_h_

