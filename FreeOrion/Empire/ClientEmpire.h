
#ifndef _FREEORION_CLIENTEMPIRE_H_
#define _FREEORION_CLIENTEMPIRE_H_

#ifndef _FREEORION_EMPIREMANAGER_H_
#include "EmpireManager.h"
#endif

/**
* ClientEmpire is the client version of the EmpireManager.
* It supports methods to handle the turn updates which are generated by 
* ServerEmpire
*
*/
class ClientEmpire : public EmpireManager
{
public:
    /** \name Constructors */ //@{

    /// Creates an empty Client empire manager.
    ClientEmpire();
   
   //@}
   
   /** \name Mutators */ //@{
   
   /// Handles Empire state updates from server.
    /**
    *  Handles an update for this client.  
    *  The XMLElement should be an XMLDiff for the empires in this client
    *  manager (that is, produced by ServerEmpire::CreateClientEmpireUpdate()
    *
    *  The client manager will be updated to reflect the changes specified
    *  by ServerEmpire.  Empires will be created, removed, or modified until
    *  the empires in this manager match those in the server manager.
    *
    */
    bool HandleEmpireElementUpdate( GG::XMLElement empireElement);

    /// Handles SitRep updates from server.
    /**
    *  Takes an XMLElement representing a list of sitrep events
    *  The list will be decoded, one entry at a time, and the entries
    *  will be added to the sitrep of the empire to whom they belong.
    * 
    *  The XMLElement passed into this method should be identical to
    *  that generated by ServerEmpire::CreateClientSitrepUpdate()
    *
    */
    bool HandleSitRepElementUpdate( GG::XMLElement sitRepElement);

    //@}

protected:
    // nothing yet
    
};


#endif

